"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,t){var e;if(r)return"string"==typeof r?_arrayLikeToArray(r,t):"Map"===(e="Object"===(e=Object.prototype.toString.call(r).slice(8,-1))&&r.constructor?r.constructor.name:e)||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(r,t):void 0}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}module.exports={name:"Line",handler:function(){var o=this,a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};return new Promise(function(r,t){var e=a.lineStyle,n=a.line,n=void 0===n?[]:n;o.setLineStyle(e),n.forEach(function(r,t){t?((t=o.ctx).lineTo.apply(t,_toConsumableArray(r.point.map(function(r){return o.xDpr(r)}))),o.ctx.stroke()):(o.ctx.beginPath(),(t=o.ctx).moveTo.apply(t,_toConsumableArray(r.point.map(function(r){return o.xDpr(r)}))))}),r()})}};