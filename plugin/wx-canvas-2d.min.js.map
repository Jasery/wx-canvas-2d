{"version":3,"sources":["webpack://WxCanvas2d/webpack/universalModuleDefinition","webpack://WxCanvas2d/webpack/bootstrap","webpack://WxCanvas2d/./node_modules/stackblur-canvas/dist/stackblur-es.js","webpack://WxCanvas2d/./plugin/wx-canvas-2d.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof","obj","iterator","constructor","mulTable","shgTable","getImageDataFromCanvas","canvas","topX","topY","width","height","document","getElementById","TypeError","context","getContext","getImageData","e","Error","processCanvasRGB","radius","isNaN","imageData","stackEnd","pixels","data","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","next","rbs","stackIn","stackOut","mulSum","shgSum","yw","yi","y","pr","pg","pb","rOutSum","gOutSum","bOutSum","rSum","gSum","bSum","_i5","g","b","rInSum","gInSum","bInSum","_i6","x","_x2","_pr2","_pg2","_pb2","_rOutSum2","_gOutSum2","_bOutSum2","_rSum2","_gSum2","_bSum2","_i7","_rInSum2","_gInSum2","_bInSum2","_i8","yp","_y2","processImageDataRGB","putImageData","instance","Constructor","_classCallCheck","this","a","SYS_INFO","wx","getSystemInfoSync","query","bgColor","component","ctx","dpr","rootWidth","fontFamily","startTime","Date","now","debugger","opts","Promise","resolve","reject","options","createSelectorQuery","in","select","fields","node","size","exec","res","pixelRatio","clearRect","xDpr","drawRectPath","screenWidth","clip","fillStyle","fillRect","val","series","clear","_series","map","zIndex","sort","drawFunc","rect","cvs","drawRect","image","drawImage","text","drawText","line","drawLine","blur","drawBlur","arc","drawArc","extendDrawMethods","index","length","type","styleClear","then","debugLogout","catch","err","setTextAlign","textBaseline","font","lineCap","setLineDash","lineDashOffset","lineJoin","lineWidth","strokeStyle","lineStyle","cap","join","offset","dash","color","Math","min","setLineStyle","stroke","fill","angle","top","PI","right","bottom","left","angleArr","arcPos","beginPath","Array","forEach","closePath","url","img","createImage","src","onload","getImageInfo","success","imgWidth","imgHeight","aspectRatio","widthRatio","heightRatio","imgCut","scaleToFill","aspectFit","aspectFill","widthFix","center","save","restore","fail","errCode","onerror","_opts","fontSize","fontWeight","Infinity","baseline","align","String","ellipsis","max","lineHeight","start","splitStr","split","str","slice","measureText","fillText","lineTo","point","moveTo","end","reverse","destWidth","destHeight","modalOption","canvasToTempFilePath","tempFilePath","getAuth","code","showModal","title","content","confirm","openSetting","ERR_CODE","cancel","includes","saveImageToPhotosAlbum","args","logout","addSeries","handle","100","101","102","103","104","105","106","107","msg","getSetting","callback","settings","undefined","authSetting","filePath","log","style1","style2","console","brand","debug"],"mappings":"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","file":"wx-canvas-2d.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WxCanvas2d\"] = factory();\n\telse\n\t\troot[\"WxCanvas2d\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise -- used for calculations */\n\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffsetWidth\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel, useOffsetWidth) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || !('naturalWidth' in img)) {\n    return;\n  }\n\n  var dimensionType = useOffsetWidth ? 'offset' : 'natural';\n  var w = img[dimensionType + 'Width'];\n  var h = img[dimensionType + 'Height'];\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  canvas.style.width = w + 'px';\n  canvas.style.height = h + 'px';\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null,\n      stackOut = null,\n      yw = 0,\n      yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (var y = 0; y < height; y++) {\n    stack = stackStart;\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        pa = pixels[yi + 3];\n\n    for (var _i = 0; _i < radiusPlus1; _i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0,\n        aInSum = 0,\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        aOutSum = radiusPlus1 * pa,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb,\n        aSum = sumFactor * pa;\n\n    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {\n      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);\n      var r = pixels[p],\n          g = pixels[p + 1],\n          b = pixels[p + 2],\n          a = pixels[p + 3];\n      var rbs = radiusPlus1 - _i2;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      var paInitial = aSum * mulSum >> shgSum;\n      pixels[yi + 3] = paInitial;\n\n      if (paInitial !== 0) {\n        var _a2 = 255 / paInitial;\n\n        pixels[yi] = (rSum * mulSum >> shgSum) * _a2;\n        pixels[yi + 1] = (gSum * mulSum >> shgSum) * _a2;\n        pixels[yi + 2] = (bSum * mulSum >> shgSum) * _a2;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      var _p = x + radius + 1;\n\n      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[_p];\n      gInSum += stackIn.g = pixels[_p + 1];\n      bInSum += stackIn.b = pixels[_p + 2];\n      aInSum += stackIn.a = pixels[_p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      var _stackOut = stackOut,\n          _r = _stackOut.r,\n          _g = _stackOut.g,\n          _b = _stackOut.b,\n          _a = _stackOut.a;\n      rOutSum += _r;\n      gOutSum += _g;\n      bOutSum += _b;\n      aOutSum += _a;\n      rInSum -= _r;\n      gInSum -= _g;\n      bInSum -= _b;\n      aInSum -= _a;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x = 0; _x < width; _x++) {\n    yi = _x << 2;\n\n    var _pr = pixels[yi],\n        _pg = pixels[yi + 1],\n        _pb = pixels[yi + 2],\n        _pa = pixels[yi + 3],\n        _rOutSum = radiusPlus1 * _pr,\n        _gOutSum = radiusPlus1 * _pg,\n        _bOutSum = radiusPlus1 * _pb,\n        _aOutSum = radiusPlus1 * _pa,\n        _rSum = sumFactor * _pr,\n        _gSum = sumFactor * _pg,\n        _bSum = sumFactor * _pb,\n        _aSum = sumFactor * _pa;\n\n    stack = stackStart;\n\n    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {\n      stack.r = _pr;\n      stack.g = _pg;\n      stack.b = _pb;\n      stack.a = _pa;\n      stack = stack.next;\n    }\n\n    var yp = width;\n    var _gInSum = 0,\n        _bInSum = 0,\n        _aInSum = 0,\n        _rInSum = 0;\n\n    for (var _i4 = 1; _i4 <= radius; _i4++) {\n      yi = yp + _x << 2;\n\n      var _rbs = radiusPlus1 - _i4;\n\n      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;\n      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;\n      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;\n      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;\n      _rInSum += _pr;\n      _gInSum += _pg;\n      _bInSum += _pb;\n      _aInSum += _pa;\n      stack = stack.next;\n\n      if (_i4 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y = 0; _y < height; _y++) {\n      var _p2 = yi << 2;\n\n      pixels[_p2 + 3] = _pa = _aSum * mulSum >> shgSum;\n\n      if (_pa > 0) {\n        _pa = 255 / _pa;\n        pixels[_p2] = (_rSum * mulSum >> shgSum) * _pa;\n        pixels[_p2 + 1] = (_gSum * mulSum >> shgSum) * _pa;\n        pixels[_p2 + 2] = (_bSum * mulSum >> shgSum) * _pa;\n      } else {\n        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;\n      }\n\n      _rSum -= _rOutSum;\n      _gSum -= _gOutSum;\n      _bSum -= _bOutSum;\n      _aSum -= _aOutSum;\n      _rOutSum -= stackIn.r;\n      _gOutSum -= stackIn.g;\n      _bOutSum -= stackIn.b;\n      _aOutSum -= stackIn.a;\n      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;\n      _rSum += _rInSum += stackIn.r = pixels[_p2];\n      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];\n      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];\n      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];\n      stackIn = stackIn.next;\n      _rOutSum += _pr = stackOut.r;\n      _gOutSum += _pg = stackOut.g;\n      _bOutSum += _pb = stackOut.b;\n      _aOutSum += _pa = stackOut.a;\n      _rInSum -= _pr;\n      _gInSum -= _pg;\n      _bInSum -= _pb;\n      _aInSum -= _pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  var p, rbs;\n  var yw = 0,\n      yi = 0;\n\n  for (var y = 0; y < height; y++) {\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb;\n    stack = stackStart;\n\n    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0;\n\n    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {\n      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >> shgSum;\n      pixels[yi + 1] = gSum * mulSum >> shgSum;\n      pixels[yi + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x2 = 0; _x2 < width; _x2++) {\n    yi = _x2 << 2;\n\n    var _pr2 = pixels[yi],\n        _pg2 = pixels[yi + 1],\n        _pb2 = pixels[yi + 2],\n        _rOutSum2 = radiusPlus1 * _pr2,\n        _gOutSum2 = radiusPlus1 * _pg2,\n        _bOutSum2 = radiusPlus1 * _pb2,\n        _rSum2 = sumFactor * _pr2,\n        _gSum2 = sumFactor * _pg2,\n        _bSum2 = sumFactor * _pb2;\n\n    stack = stackStart;\n\n    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {\n      stack.r = _pr2;\n      stack.g = _pg2;\n      stack.b = _pb2;\n      stack = stack.next;\n    }\n\n    var _rInSum2 = 0,\n        _gInSum2 = 0,\n        _bInSum2 = 0;\n\n    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n      yi = yp + _x2 << 2;\n      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;\n      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;\n      _rInSum2 += _pr2;\n      _gInSum2 += _pg2;\n      _bInSum2 += _pb2;\n      stack = stack.next;\n\n      if (_i8 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x2;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y2 = 0; _y2 < height; _y2++) {\n      p = yi << 2;\n      pixels[p] = _rSum2 * mulSum >> shgSum;\n      pixels[p + 1] = _gSum2 * mulSum >> shgSum;\n      pixels[p + 2] = _bSum2 * mulSum >> shgSum;\n      _rSum2 -= _rOutSum2;\n      _gSum2 -= _gOutSum2;\n      _bSum2 -= _bOutSum2;\n      _rOutSum2 -= stackIn.r;\n      _gOutSum2 -= stackIn.g;\n      _bOutSum2 -= stackIn.b;\n      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];\n      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      _rOutSum2 += _pr2 = stackOut.r;\n      _gOutSum2 += _pg2 = stackOut.g;\n      _bOutSum2 += _pb2 = stackOut.b;\n      _rInSum2 -= _pr2;\n      _gInSum2 -= _pg2;\n      _bInSum2 -= _pb2;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };\n","/*\n * @Author: kiccer<1072907338@qq.com>\n * @Date: 2020-11-17 21:23:04\n * @LastEditors: kiccer\n * @LastEditTime: 2020-11-17 22:18:41\n * @FilePath: \\wx-canvas-2d\\plugin\\wx-canvas-2d.js\n * @Description: 微信小程序 canvas-2d 绘图工具，轻量、便捷、容易维护。\n */\n\nimport {\n    canvasRGB as stackblurCanvasRGB\n} from 'stackblur-canvas'\n// console.log({ stackblurCanvasRGB })\n\nconst SYS_INFO = wx.getSystemInfoSync()\n\nclass WxCanvas2d {\n    constructor () {\n        this.query = null // canvas 的查询条件\n        this.bgColor = null // canvas 背景色\n        this.radius = null // canvas 背景色\n        this.component = null // 如果是在自定义组件中，需要获取到自定义组件的内部 this 变量 (即，传入 this)\n        this.canvas = null // canvas 节点\n        this.ctx = null // canvas 上下文\n        this.dpr = null // 像素比\n        this.rootWidth = null // UI设计稿宽度\n        this.fontFamily = 'sans-serif' // 默认字体，目前好像只有这个是可用的\n        this.startTime = Date.now()\n        this.debugger = false // 调试模式\n\n        // Object.defineProperty(this, 'extendDrawMethods', {\n        //     value: {},\n        //     writable: false,\n        //     enumerable: false,\n        //     configurable: true\n        // })\n    }\n\n    // 创建画布\n    create (opts) {\n        // console.log(opts)\n        return new Promise((resolve, reject) => {\n            const options = {\n                query: '',\n                rootWidth: 375,\n                ...opts\n            }\n\n            if (!options.query) reject(new Error('[WxCanvas2d] \\'query\\' is empty.'))\n\n            this.query = options.query\n            this.bgColor = options.bgColor\n            this.component = options.component\n            this.radius = options.radius\n\n            const query = this.component\n                ? wx.createSelectorQuery().in(this.component)\n                : wx.createSelectorQuery()\n\n            query.select(this.query)\n                .fields({ node: true, size: true })\n                .exec(res => {\n                    // console.log(res)\n                    if (!res[0]) return false\n\n                    const canvas = res[0].node\n                    const ctx = canvas.getContext('2d')\n                    const dpr = SYS_INFO.pixelRatio\n\n                    this.canvas = canvas\n                    this.ctx = ctx\n                    this.dpr = dpr\n                    this.rootWidth = options.rootWidth\n\n                    this.canvas.width = res[0].width * this.dpr\n                    this.canvas.height = res[0].height * this.dpr\n                    // this.ctx.scale(this.dpr, this.dpr)\n\n                    resolve()\n                })\n        })\n    }\n\n    // 清空画布\n    clear () {\n        this.ctx.clearRect(0, 0, this.xDpr(this.canvas.width), this.xDpr(this.canvas.height))\n\n        if (this.radius) {\n            this.drawRectPath({\n                x: 0,\n                y: 0,\n                width: this.canvas.width / SYS_INFO.screenWidth / this.dpr * this.rootWidth,\n                height: this.canvas.height / SYS_INFO.screenWidth / this.dpr * this.rootWidth,\n                radius: this.radius\n            })\n\n            this.ctx.clip()\n        }\n\n        if (this.bgColor) {\n            this.ctx.fillStyle = this.bgColor\n            this.ctx.fillRect(0, 0, this.xDpr(this.canvas.width), this.xDpr(this.canvas.height))\n        }\n    }\n\n    // canvas 大小适配\n    xDpr (val) {\n        return val * this.dpr * SYS_INFO.screenWidth / this.rootWidth\n    }\n\n    // 绘制画布 (重设画布大小)\n    draw (opts) {\n        // console.log(opts)\n        return new Promise((resolve, reject) => {\n            this.startTime = Date.now()\n            const { series } = opts\n\n            const query = this.component\n                ? wx.createSelectorQuery().in(this.component)\n                : wx.createSelectorQuery()\n\n            query.select(this.query)\n                .fields({ node: true, size: true })\n                .exec(res => {\n                    // console.log(res)\n                    if (!res[0]) return false\n\n                    // 重设画布大小\n                    this.canvas.width = res[0].width * this.dpr\n                    this.canvas.height = res[0].height * this.dpr\n                    // this.ctx.scale(this.dpr, this.dpr)\n\n                    this.clear() // 画之前先清空一次画布\n\n                    // 根据 zIndex 排序 (从小到大，先画小的，这样越大的显示在越上方)\n                    const _series = series\n                        .map(n => ({ ...n, zIndex: n.zIndex || 0 }))\n                        .sort((n, m) => n.zIndex - m.zIndex)\n\n                    // 绘制方法映射表\n                    const drawFunc = {\n                        rect: (cvs, ...opts) => this.drawRect(...opts),\n                        image: (cvs, ...opts) => this.drawImage(...opts),\n                        text: (cvs, ...opts) => this.drawText(...opts),\n                        line: (cvs, ...opts) => this.drawLine(...opts),\n                        blur: (cvs, ...opts) => this.drawBlur(...opts),\n                        arc: (cvs, ...opts) => this.drawArc(...opts),\n                        ...WxCanvas2d.extendDrawMethods\n                    }\n\n                    // 按顺序绘制图层方法\n                    const next = (index = 0) => {\n                        if (index < _series.length) {\n                            const options = _series[index]\n                            if (drawFunc[options.type]) {\n                                // this.debugLogout(`正在绘制 [${options.type}] (${index + 1}/${_series.length})`)\n                                this.styleClear() // 绘制新图层前，先还原一次样式设置\n                                drawFunc[options.type](this, options).then(() => {\n                                    this.debugLogout(`绘制成功 [${options.type}] (${index + 1}/${_series.length})`)\n                                    next(++index)\n                                }).catch(err => {\n                                    this.debugLogout('绘制失败')\n                                    reject(err) // 绘制失败抛错\n                                })\n                            } else {\n                                // console.warn(`[WxCanvas2d] Unknown type: '${options.type}'`)\n                                this.debugLogout(`未知类型 type: '${options.type}'`, 'error')\n                                next(++index)\n                            }\n                        } else {\n                            this.debugLogout(`绘制完成 (${Date.now() - this.startTime}ms)`)\n                            resolve() // 所有图层绘制完毕\n                        }\n                    }\n\n                    this.debugLogout('开始绘制')\n                    next() // 开始按顺序绘制图层\n                })\n        })\n    }\n\n    // 清空 (初始化) 样式\n    styleClear () {\n        this.ctx.setTextAlign = 'left'\n        this.ctx.textBaseline = 'top'\n        this.ctx.fillStyle = '#000'\n        this.ctx.font = `${this.xDpr(12 * this.rootWidth / SYS_INFO.screenWidth)}px ${this.fontFamily}`\n        this.ctx.lineCap = 'butt'\n        this.ctx.setLineDash([1, 0])\n        this.ctx.lineDashOffset = 0\n        this.ctx.lineJoin = 'bevel'\n        this.ctx.lineWidth = this.xDpr(1)\n        this.ctx.strokeStyle = '#000'\n        // this.setContainerRadius()\n    }\n\n    // 设置线的样式\n    setLineStyle (lineStyle) {\n        const {\n            cap = 'butt', // butt | round | square\n            join = 'bevel', // bevel | round | miter\n            offset = 0,\n            dash = [1, 0],\n            color = '#000',\n            width = 2\n        } = lineStyle\n\n        this.ctx.lineCap = cap\n        this.ctx.setLineDash(dash.map(n => this.xDpr(n)))\n        this.ctx.lineDashOffset = this.xDpr(offset)\n        this.ctx.lineJoin = join\n        this.ctx.lineWidth = this.xDpr(width)\n        this.ctx.strokeStyle = color\n    }\n\n    // 绘制矩形\n    drawRect (opts) {\n        return new Promise((resolve, reject) => {\n            let {\n                x = 0,\n                y = 0,\n                width = 0,\n                height = 0,\n                // color = '',\n                bgColor = '',\n                radius = 0,\n                lineStyle\n                // blur = 0\n            } = opts\n\n            // 防止 radius 设置过大\n            radius = Math.min(radius, Math.min(width, height) / 2)\n\n            // this.ctx.strokeStyle = color\n            // 设置线段样式\n            this.setLineStyle(lineStyle)\n            // 设置填充色\n            this.ctx.fillStyle = bgColor\n\n            // if (blur) {\n            //     // stackblurCanvasRGB(\n            //     //     this.canvas,\n            //     //     this.xDpr(x),\n            //     //     this.xDpr(y),\n            //     //     this.xDpr(width),\n            //     //     this.xDpr(height),\n            //     //     blur\n            //     // )\n\n            //     // wx.canvasGetImageData({\n\n            //     // }, this.component)\n            // }\n\n            this.drawRectPath({\n                x: x,\n                y: y,\n                width: width,\n                height: height,\n                radius: radius\n            })\n\n            if (lineStyle.color) {\n                this.ctx.stroke()\n            }\n\n            if (bgColor) {\n                this.ctx.fill()\n            }\n\n            resolve()\n        })\n    }\n\n    // 绘制矩形路径\n    drawRectPath (opts) {\n        const {\n            x = 0,\n            y = 0,\n            width = 0,\n            height = 0,\n            radius = 0\n        } = opts\n        // console.log(_opts)\n\n        // 圆角起始/结束方向\n        const angle = {\n            top: Math.PI * 1.5,\n            right: 0,\n            bottom: Math.PI * 0.5,\n            left: Math.PI\n        }\n\n        // 圆角方向\n        const angleArr = [\n            [angle.left, angle.top],\n            [angle.top, angle.right],\n            [angle.right, angle.bottom],\n            [angle.bottom, angle.left]\n        ]\n\n        // 圆角中心点坐标\n        const arcPos = [\n            [x + radius, y + radius].map(n => this.xDpr(n)), // left top\n            [x + width - radius, y + radius].map(n => this.xDpr(n)), // top right\n            [x + width - radius, y + height - radius].map(n => this.xDpr(n)), // right bottom\n            [x + radius, y + height - radius].map(n => this.xDpr(n)) // bottom left\n        ]\n\n        this.ctx.beginPath()\n\n        Array(4).fill().forEach((n, i) => {\n            this.ctx.arc(...arcPos[i], this.xDpr(radius), ...angleArr[i])\n        })\n\n        this.ctx.closePath()\n    }\n\n    // 绘制图片\n    drawImage (opts) {\n        // console.log(opts)\n        const {\n            url = '',\n            x = 0,\n            y = 0,\n            width = 0,\n            height = 0,\n            mode = 'scaleToFill',\n            radius = 0\n        } = opts\n\n        // scaleToFill: 缩放: 不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素\n        // aspectFit: 缩放: 保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。\n        // aspectFill: 缩放: 保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取。\n        // widthFix: 缩放: 宽度不变，高度自动变化，保持原图宽高比不变\n        // top: 裁剪: 不缩放图片，只显示图片的顶部区域\n        // bottom: 裁剪: 不缩放图片，只显示图片的底部区域\n        // center: 裁剪: 不缩放图片，只显示图片的中间区域\n        // left: 裁剪: 不缩放图片，只显示图片的左边区域\n        // right: 裁剪: 不缩放图片，只显示图片的右边区域\n        // top left: 裁剪: 不缩放图片，只显示图片的左上边区域\n        // top right: 裁剪: 不缩放图片，只显示图片的右上边区域\n        // bottom left: 裁剪: 不缩放图片，只显示图片的左下边区域\n\n        return new Promise((resolve, reject) => {\n            const img = this.canvas.createImage()\n\n            img.src = url\n            img.onload = () => {\n                wx.getImageInfo({\n                    src: url,\n                    success: res => {\n                        // console.log(res)\n                        // console.log(wx.getFileSystemManager)\n                        // console.log(wx.getFileSystemManager().readFileSync(res, 'base64'))\n                        const imgWidth = res.width\n                        const imgHeight = res.height\n                        const aspectRatio = width / height\n                        let widthRatio = 1\n                        let heightRatio = 1\n\n                        // 原图等比例缩放后截取范围的长宽比\n                        if (mode === 'aspectFit') {\n                            widthRatio = res.width / res.height < aspectRatio\n                                ? width / res.width * res.height / height : 1\n                            heightRatio = res.width / res.height > aspectRatio\n                                ? height / res.height * res.width / width : 1\n                        } else if (mode === 'aspectFill') {\n                            widthRatio = res.width / res.height > aspectRatio\n                                ? width / res.width * res.height / height : 1\n                            heightRatio = res.width / res.height < aspectRatio\n                                ? height / res.height * res.width / width : 1\n                        }\n\n                        const imgCut = {\n                            scaleToFill: [\n                                0, 0, imgWidth, imgHeight\n                            ], // 缩放: 不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素\n                            aspectFit: [\n                                (res.width - res.width * widthRatio) / 2, (res.height - res.height * heightRatio) / 2, res.width * widthRatio, res.height * heightRatio\n                            ], // 缩放: 保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。\n                            aspectFill: [\n                                (res.width - res.width * widthRatio) / 2, (res.height - res.height * heightRatio) / 2, res.width * widthRatio, res.height * heightRatio\n                            ], // 缩放: 保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取。\n                            widthFix: [], // 缩放: 宽度不变，高度自动变化，保持原图宽高比不变\n                            top: [\n                                (imgWidth - width) / 2, 0, width, height\n                            ], // 裁剪: 不缩放图片，只显示图片的顶部区域\n                            bottom: [\n                                (imgWidth - width) / 2, imgHeight - height, width, height\n                            ], // 裁剪: 不缩放图片，只显示图片的底部区域\n                            center: [\n                                (imgWidth - width) / 2, (imgHeight - height) / 2, width, height\n                            ], // 裁剪: 不缩放图片，只显示图片的中间区域\n                            left: [\n                                0, (imgHeight - height) / 2, width, height\n                            ], // 裁剪: 不缩放图片，只显示图片的左边区域\n                            right: [\n                                imgWidth - width, (imgHeight - height) / 2, width, height\n                            ], // 裁剪: 不缩放图片，只显示图片的右边区域\n                            'top left': [\n                                0, 0, width, height\n                            ], // 裁剪: 不缩放图片，只显示图片的左上边区域\n                            'top right': [\n                                imgWidth - width, 0, width, height\n                            ], // 裁剪: 不缩放图片，只显示图片的右上边区域\n                            'bottom left': [\n                                0, imgHeight - height, width, height\n                            ], // 裁剪: 不缩放图片，只显示图片的左下边区域\n                            'bottom right': [\n                                imgWidth - width, imgHeight - height, width, height\n                            ] // 裁剪: 不缩放图片，只显示图片的右下边区域\n                        }\n                        // console.log(mode)\n\n                        if (radius) {\n                            this.ctx.save()\n                            this.drawRectPath({ x, y, width, height, radius })\n                            this.ctx.clip()\n                        }\n\n                        this.ctx.drawImage(\n                            img,\n                            // ...(imgCut[mode] || imgCut.scaleToFill).map((n, i) => i >= 4 ? this.xDpr(n) : n)\n                            ...(imgCut[mode] || []),\n                            this.xDpr(x) || 0,\n                            this.xDpr(y) || 0,\n                            this.xDpr(width || res.width),\n                            this.xDpr(height || res.height)\n                        )\n\n                        // if (blur) {\n                        //     // console.log(this)\n                        //     canvasRGB(\n                        //         this.canvas,\n                        //         this.xDpr(x) || 0,\n                        //         this.xDpr(y) || 0,\n                        //         this.xDpr(width || res.width),\n                        //         this.xDpr(height || res.height),\n                        //         blur\n                        //     )\n                        // }\n\n                        if (radius) {\n                            this.ctx.restore()\n                        }\n\n                        resolve()\n                    },\n                    fail: () => {\n                        reject(errCode(106))\n                    }\n                })\n            }\n\n            img.onerror = () => {\n                reject(errCode(107))\n            }\n        })\n    }\n\n    // 绘制文本\n    drawText (opts) {\n        // console.log(opts)\n        return new Promise((resolve, reject) => {\n            const _opts = {\n                // text: '',\n                x: 0,\n                y: 0,\n                color: '#000',\n                fontSize: 12,\n                fontWeight: '',\n                width: Infinity,\n                baseline: 'top', // top | hanging | middle | alphabetic | ideographic | bottom\n                align: 'left', // left | right | center | start | end\n                ...opts,\n                text: String(opts.text) || '',\n                ellipsis: Math.max(+opts.ellipsis, 0), // 最多显示行数，超出显示...\n                lineHeight: opts.lineHeight || opts.fontSize || 12\n            }\n\n            let start = 0 // 截取的起始下标\n            let index = 0 // 行数下标\n            let splitStr = [] // 拆分后的文本数组\n\n            this.ctx.setTextAlign = _opts.align\n            this.ctx.textBaseline = _opts.baseline\n            this.ctx.fillStyle = _opts.color\n            this.ctx.font = `${_opts.fontWeight} ${this.xDpr(_opts.fontSize)}px ${this.fontFamily}`\n\n            // 拆分文本\n            _opts.text.split('').forEach((n, i) => {\n                const str = _opts.text.slice(start, i + 1)\n                if (this.ctx.measureText(str).width < this.xDpr(_opts.width)) {\n                    splitStr[index] = str\n                } else {\n                    start = i\n                    index++\n                }\n            })\n\n            // 最大显示行，超出显示省略号\n            if (_opts.ellipsis && splitStr.length > _opts.ellipsis) {\n                splitStr = splitStr.slice(0, _opts.ellipsis)\n                splitStr[_opts.ellipsis - 1] = splitStr[_opts.ellipsis - 1].slice(0, -1) + '...'\n            }\n\n            // 循环绘制文本\n            splitStr.forEach((n, i) => {\n                const y = _opts.y + _opts.lineHeight * i + (_opts.lineHeight - _opts.fontSize) / 2\n\n                this.ctx.fillText(\n                    n,\n                    this.xDpr(_opts.x),\n                    this.xDpr(y)\n                )\n            })\n\n            resolve()\n        })\n    }\n\n    // 绘制线段\n    drawLine (opts) {\n        // console.log(opts)\n        return new Promise((resolve, reject) => {\n            const {\n                lineStyle,\n                line = []\n            } = opts\n\n            // 设置线段样式\n            this.setLineStyle(lineStyle)\n\n            // 绘制线段\n            line.forEach((n, i) => {\n                if (!i) {\n                    this.ctx.beginPath()\n                    this.ctx.moveTo(...n.point.map(n => this.xDpr(n)))\n                } else {\n                    this.ctx.lineTo(...n.point.map(n => this.xDpr(n)))\n                    this.ctx.stroke()\n                }\n            })\n\n            resolve()\n        })\n    }\n\n    // 绘制模糊范围\n    drawBlur (opts) {\n        return new Promise((resolve, reject) => {\n            const {\n                x = 0,\n                y = 0,\n                width = 0,\n                height = 0,\n                blur = 0\n            } = opts\n\n            stackblurCanvasRGB(\n                this.canvas,\n                this.xDpr(x),\n                this.xDpr(y),\n                this.xDpr(width),\n                this.xDpr(height),\n                blur\n            )\n\n            resolve()\n        })\n    }\n\n    // 绘制弧形\n    drawArc (opts) {\n        return new Promise((resolve, reject) => {\n            const {\n                x = 0,\n                y = 0,\n                r = 0,\n                start = 0,\n                end = 0,\n                reverse = false,\n                lineStyle\n            } = opts\n\n            // 设置线段样式\n            this.setLineStyle(lineStyle)\n\n            // 绘制线段\n            this.ctx.beginPath()\n            this.ctx.arc(\n                this.xDpr(x),\n                this.xDpr(y),\n                this.xDpr(r),\n                start,\n                end,\n                reverse\n            )\n            this.ctx.stroke()\n        })\n    }\n\n    // 保存画布内容到相册\n    saveToAlbum (opts) {\n        return new Promise((resolve, reject) => {\n            const _opts = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n                destWidth: 0,\n                destHeight: 0,\n                modalOption: {},\n                ...opts\n            }\n\n            wx.canvasToTempFilePath({\n                x: _opts.x,\n                y: _opts.y,\n                width: _opts.width,\n                height: _opts.height,\n                destWidth: this.xDpr(_opts.destWidth),\n                destHeight: this.xDpr(_opts.destHeight),\n                canvas: this.canvas,\n                success: res => {\n                    const tempFilePath = res.tempFilePath\n\n                    getAuth('writePhotosAlbum').then(res => {\n                        if (res.code === 1) {\n                            wx.showModal({\n                                title: _opts.modalOption.title || '获取权限',\n                                content: _opts.modalOption.content || '请前往开启相册权限',\n                                success: _opts.modalOption.success || (res => {\n                                    if (res.confirm) {\n                                        wx.openSetting()\n                                        this.debugLogout(`${ERR_CODE[105]} (105)`, 'error')\n                                        reject(errCode(105))\n                                    } else if (res.cancel) {\n                                        this.debugLogout(`${ERR_CODE[104]} (104)`, 'error')\n                                        reject(errCode(104))\n                                    }\n                                })\n                            })\n                        } else if ([2, 3].includes(res.code)) {\n                            saveImageToPhotosAlbum(tempFilePath).then(res => {\n                                this.debugLogout('保存图片到相册成功')\n                                resolve()\n                            }).catch(() => {\n                                this.debugLogout(`${ERR_CODE[102]} (102)`, 'error')\n                                reject(errCode(102))\n                            })\n                        }\n                    }).catch(() => {\n                        this.debugLogout(`${ERR_CODE[101]} (101)`, 'error')\n                        reject(errCode(101))\n                    })\n                },\n                fail: () => {\n                    this.debugLogout(`${ERR_CODE[100]} (100)`, 'error')\n                    reject(errCode(100))\n                }\n            })\n        })\n    }\n\n    // 输出调试信息\n    debugLogout (...args) {\n        if (this.debugger) {\n            logout(...args)\n        }\n    }\n\n    // 增加新的绘制类型\n    // addSeries (type, handle) {\n    //     this.extendDrawMethods[type] = (...opts) => {\n    //         handle(this, ...opts)\n    //     }\n    // }\n}\n\nWxCanvas2d.extendDrawMethods = {}\n\nWxCanvas2d.addSeries = function (type, handle) {\n    WxCanvas2d.extendDrawMethods[type] = handle\n}\n\n// const debugLogout = function (...args) {\n//     if (this.debugger) {\n//         logout(...args)\n//     }\n// }\n\n/**\n * 错误码字典\n *\n * @var {Object}\n */\nconst ERR_CODE = {\n    100: '生成图片失败',\n    101: '获取设置信息失败',\n    102: '保存图片到相册失败',\n    103: '授权失败',\n    104: '用户拒绝授权',\n    105: '用户前往授权页',\n    106: '获取图片信息失败',\n    107: '加载图片失败'\n}\n\n/**\n * 生成错误代码信息\n *\n * @param   {Number}  code  错误码\n *\n * @return  {Object}        错误代码信息\n */\nconst errCode = function (code) {\n    return {\n        code,\n        msg: ERR_CODE[code]\n    }\n}\n\n/**\n * 小程序获取权限\n *\n * @param   {String}  name  权限名称\n *\n * @return  {Promise}        Promise\n */\nconst getAuth = function (name) {\n    return new Promise((resolve, reject) => {\n        wx.getSetting({\n            success (res) {\n                const callback = code => ({ settings: res, code })\n\n                if (res.authSetting['scope.' + name] !== undefined && res.authSetting['scope.' + name] !== true) {\n                    // 用户主动取消过\n                    resolve(callback(1))\n                } else if (res.authSetting['scope.' + name] === undefined) {\n                    // 第一次向用户获取\n                    resolve(callback(2))\n                } else {\n                    // 用户已授权\n                    resolve(callback(3))\n                }\n            },\n            fail (err) {\n                reject(err)\n            }\n        })\n    })\n}\n\n/**\n * 保存图片到相册\n *\n * @param   {String}  tempFilePath  临时文件路径\n *\n * @return  {Promise}                Promise\n */\nconst saveImageToPhotosAlbum = function (tempFilePath) {\n    return new Promise((resolve, reject) => {\n        wx.saveImageToPhotosAlbum({\n            filePath: tempFilePath,\n            success: res => {\n                resolve()\n            },\n            fail: err => {\n                reject(err)\n            }\n        })\n    })\n}\n\n/**\n * 控制台输出信息\n *\n * @param {*} msg 输出信息\n * @param {string} [type='info'] 输出类型\n */\nconst logout = function (msg, type = 'info') {\n    if (!msg) return\n\n    const log = function (style1, style2) {\n        console.log(`%cWxCanvas2d%c${msg}`, `\n            color: ${style1.color};\n            background-color: ${style1.bgColor};\n            padding: 1px 4px;\n            border-radius: 4px 0 0 4px;\n        `, `\n            color: ${style2.color};\n            background-color: ${style2.bgColor};\n            padding: 1px 4px;\n            border-radius: 0 4px 4px 0;\n        `)\n    }\n\n    if (SYS_INFO.brand === 'devtools') {\n        if (type === 'info') {\n            log({\n                color: '#004B1C',\n                bgColor: '#2BDC70'\n            }, {\n                color: '#084BBC',\n                bgColor: '#81A9F0'\n            })\n        } else if (type === 'error') {\n            log({\n                color: '#006727',\n                bgColor: '#2BDC70'\n            }, {\n                color: '#D82E2E',\n                bgColor: '#FFB2B2'\n            })\n        } else {\n            console.log(`WxCanvas2d: ${msg}`)\n        }\n    } else {\n        console.debug(`WxCanvas2d: ${msg}`)\n    }\n}\n\n// console.log({ WxCanvas2d })\n\nexport default WxCanvas2d\n"],"sourceRoot":""}